
There are no discarded input sections

Memory Configuration

Name             Origin             Length             Attributes
RAM              0x20000000         0x00020000         xrw
ROM              0x08000000         0x00080000         xr
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD main.o
LOAD ../startup/startup_stm32f446xx.o
                0x20020000                        _estack = (ORIGIN (RAM) + LENGTH (RAM))
                0x00000200                        _Min_Heap_Size = 0x200
                0x00000400                        _Min_Stack_Size = 0x400

.isr_vector     0x08000000      0x1c4
                0x08000000                        . = ALIGN (0x4)
 *(.isr_vector)
 .isr_vector    0x08000000      0x1c4 ../startup/startup_stm32f446xx.o
                0x08000000                g_pfnVectors
                0x080001c4                        . = ALIGN (0x4)

.text           0x080001c4      0x12c
                0x080001c4                        . = ALIGN (0x4)
 *(.text)
 .text          0x080001c4       0x80 main.o
                0x080001c4                uart2_init
                0x08000218                uart2_send
                0x08000228                uart2_print
 .text          0x08000244       0x14 ../startup/startup_stm32f446xx.o
 *(.text*)
 .text.startup  0x08000258       0x4c main.o
                0x08000258                main
 .text.Reset_Handler
                0x080002a4       0x48 ../startup/startup_stm32f446xx.o
                0x080002a4                Reset_Handler
 .text.Default_Handler
                0x080002ec        0x2 ../startup/startup_stm32f446xx.o
                0x080002ec                RTC_Alarm_IRQHandler
                0x080002ec                EXTI2_IRQHandler
                0x080002ec                TIM8_CC_IRQHandler
                0x080002ec                DebugMon_Handler
                0x080002ec                FMPI2C1_EV_IRQHandler
                0x080002ec                SPI4_IRQHandler
                0x080002ec                TIM1_CC_IRQHandler
                0x080002ec                DMA2_Stream5_IRQHandler
                0x080002ec                HardFault_Handler
                0x080002ec                DMA1_Stream5_IRQHandler
                0x080002ec                SysTick_Handler
                0x080002ec                PVD_IRQHandler
                0x080002ec                SDIO_IRQHandler
                0x080002ec                TAMP_STAMP_IRQHandler
                0x080002ec                PendSV_Handler
                0x080002ec                NMI_Handler
                0x080002ec                CAN2_RX1_IRQHandler
                0x080002ec                EXTI3_IRQHandler
                0x080002ec                TIM8_TRG_COM_TIM14_IRQHandler
                0x080002ec                TIM1_UP_TIM10_IRQHandler
                0x080002ec                TIM8_UP_TIM13_IRQHandler
                0x080002ec                I2C3_ER_IRQHandler
                0x080002ec                EXTI0_IRQHandler
                0x080002ec                I2C2_EV_IRQHandler
                0x080002ec                DMA1_Stream2_IRQHandler
                0x080002ec                CAN1_RX0_IRQHandler
                0x080002ec                FPU_IRQHandler
                0x080002ec                OTG_HS_WKUP_IRQHandler
                0x080002ec                UsageFault_Handler
                0x080002ec                CAN2_SCE_IRQHandler
                0x080002ec                DMA2_Stream2_IRQHandler
                0x080002ec                SPI1_IRQHandler
                0x080002ec                TIM6_DAC_IRQHandler
                0x080002ec                TIM1_BRK_TIM9_IRQHandler
                0x080002ec                DCMI_IRQHandler
                0x080002ec                CAN2_RX0_IRQHandler
                0x080002ec                DMA2_Stream3_IRQHandler
                0x080002ec                SAI2_IRQHandler
                0x080002ec                USART6_IRQHandler
                0x080002ec                USART3_IRQHandler
                0x080002ec                CAN1_RX1_IRQHandler
                0x080002ec                UART5_IRQHandler
                0x080002ec                DMA2_Stream0_IRQHandler
                0x080002ec                TIM4_IRQHandler
                0x080002ec                QUADSPI_IRQHandler
                0x080002ec                I2C1_EV_IRQHandler
                0x080002ec                DMA1_Stream6_IRQHandler
                0x080002ec                DMA1_Stream1_IRQHandler
                0x080002ec                UART4_IRQHandler
                0x080002ec                TIM3_IRQHandler
                0x080002ec                RCC_IRQHandler
                0x080002ec                TIM8_BRK_TIM12_IRQHandler
                0x080002ec                Default_Handler
                0x080002ec                CEC_IRQHandler
                0x080002ec                EXTI15_10_IRQHandler
                0x080002ec                ADC_IRQHandler
                0x080002ec                DMA1_Stream7_IRQHandler
                0x080002ec                TIM7_IRQHandler
                0x080002ec                CAN2_TX_IRQHandler
                0x080002ec                TIM5_IRQHandler
                0x080002ec                DMA2_Stream7_IRQHandler
                0x080002ec                I2C3_EV_IRQHandler
                0x080002ec                EXTI9_5_IRQHandler
                0x080002ec                RTC_WKUP_IRQHandler
                0x080002ec                SPDIF_RX_IRQHandler
                0x080002ec                SPI2_IRQHandler
                0x080002ec                OTG_HS_EP1_IN_IRQHandler
                0x080002ec                MemManage_Handler
                0x080002ec                DMA1_Stream0_IRQHandler
                0x080002ec                CAN1_TX_IRQHandler
                0x080002ec                SVC_Handler
                0x080002ec                FMPI2C1_ER_IRQHandler
                0x080002ec                EXTI4_IRQHandler
                0x080002ec                OTG_HS_EP1_OUT_IRQHandler
                0x080002ec                WWDG_IRQHandler
                0x080002ec                TIM2_IRQHandler
                0x080002ec                OTG_FS_WKUP_IRQHandler
                0x080002ec                TIM1_TRG_COM_TIM11_IRQHandler
                0x080002ec                OTG_HS_IRQHandler
                0x080002ec                EXTI1_IRQHandler
                0x080002ec                USART2_IRQHandler
                0x080002ec                I2C2_ER_IRQHandler
                0x080002ec                DMA2_Stream1_IRQHandler
                0x080002ec                CAN1_SCE_IRQHandler
                0x080002ec                FLASH_IRQHandler
                0x080002ec                DMA2_Stream4_IRQHandler
                0x080002ec                BusFault_Handler
                0x080002ec                USART1_IRQHandler
                0x080002ec                OTG_FS_IRQHandler
                0x080002ec                SPI3_IRQHandler
                0x080002ec                DMA1_Stream4_IRQHandler
                0x080002ec                I2C1_ER_IRQHandler
                0x080002ec                FMC_IRQHandler
                0x080002ec                DMA2_Stream6_IRQHandler
                0x080002ec                SAI1_IRQHandler
                0x080002ec                DMA1_Stream3_IRQHandler
 *(.glue_7)
 .glue_7        0x080002ee        0x0 linker stubs
 *(.glue_7t)
 .glue_7t       0x080002ee        0x0 linker stubs
 *(.eh_frame)
 *(.init)
 *(.fini)
                0x080002f0                        . = ALIGN (0x4)
 *fill*         0x080002ee        0x2 
                0x080002f0                        _etext = .

.vfp11_veneer   0x080002f0        0x0
 .vfp11_veneer  0x080002f0        0x0 linker stubs

.v4_bx          0x080002f0        0x0
 .v4_bx         0x080002f0        0x0 linker stubs

.iplt           0x080002f0        0x0
 .iplt          0x080002f0        0x0 ../startup/startup_stm32f446xx.o

.rel.dyn        0x080002f0        0x0
 .rel.iplt      0x080002f0        0x0 ../startup/startup_stm32f446xx.o

.rodata         0x080002f0        0x0
                0x080002f0                        . = ALIGN (0x4)
 *(.rodata)
 *(.rodata*)
                0x080002f0                        . = ALIGN (0x4)

.ARM.extab      0x080002f0        0x0
                0x080002f0                        . = ALIGN (0x4)
 *(.ARM.extab* .gnu.linkonce.armextab.*)
                0x080002f0                        . = ALIGN (0x4)

.ARM            0x080002f0        0x0
                0x080002f0                        . = ALIGN (0x4)
                0x080002f0                        __exidx_start = .
 *(.ARM.exidx*)
                0x080002f0                        __exidx_end = .
                0x080002f0                        . = ALIGN (0x4)

.preinit_array  0x080002f0        0x0
                0x080002f0                        . = ALIGN (0x4)
                [!provide]                        PROVIDE (__preinit_array_start = .)
 *(.preinit_array*)
                [!provide]                        PROVIDE (__preinit_array_end = .)
                0x080002f0                        . = ALIGN (0x4)

.init_array     0x080002f0        0x0
                0x080002f0                        . = ALIGN (0x4)
                [!provide]                        PROVIDE (__init_array_start = .)
 *(SORT_BY_NAME(.init_array.*))
 *(.init_array*)
                [!provide]                        PROVIDE (__init_array_end = .)
                0x080002f0                        . = ALIGN (0x4)

.fini_array     0x080002f0        0x0
                0x080002f0                        . = ALIGN (0x4)
                [!provide]                        PROVIDE (__fini_array_start = .)
 *(SORT_BY_NAME(.fini_array.*))
 *(.fini_array*)
                [!provide]                        PROVIDE (__fini_array_end = .)
                0x080002f0                        . = ALIGN (0x4)
                0x080002f0                        _sidata = LOADADDR (.data)

.data           0x20000000        0x0 load address 0x080002f0
                0x20000000                        . = ALIGN (0x4)
                0x20000000                        _sdata = .
 *(.data)
 .data          0x20000000        0x0 main.o
 .data          0x20000000        0x0 ../startup/startup_stm32f446xx.o
 *(.data*)
 *(.RamFunc)
 *(.RamFunc*)
                0x20000000                        . = ALIGN (0x4)
                0x20000000                        _edata = .

.igot.plt       0x20000000        0x0 load address 0x080002f0
 .igot.plt      0x20000000        0x0 ../startup/startup_stm32f446xx.o
                0x20000000                        . = ALIGN (0x4)

.bss            0x20000000        0x0 load address 0x080002f0
                0x20000000                        _sbss = .
                0x20000000                        __bss_start__ = _sbss
 *(.bss)
 .bss           0x20000000        0x0 main.o
 .bss           0x20000000        0x0 ../startup/startup_stm32f446xx.o
 *(.bss*)
 *(COMMON)
                0x20000000                        . = ALIGN (0x4)
                0x20000000                        _ebss = .
                0x20000000                        __bss_end__ = _ebss

._user_heap_stack
                0x20000000      0x600 load address 0x080002f0
                0x20000000                        . = ALIGN (0x8)
                [!provide]                        PROVIDE (end = .)
                [!provide]                        PROVIDE (_end = .)
                0x20000200                        . = (. + _Min_Heap_Size)
 *fill*         0x20000000      0x200 
                0x20000600                        . = (. + _Min_Stack_Size)
 *fill*         0x20000200      0x400 
                0x20000600                        . = ALIGN (0x8)

/DISCARD/
 libc.a(*)
 libm.a(*)
 libgcc.a(*)

.ARM.attributes
                0x00000000       0x2c
 *(.ARM.attributes)
 .ARM.attributes
                0x00000000       0x2e main.o
 .ARM.attributes
                0x0000002e       0x21 ../startup/startup_stm32f446xx.o
OUTPUT(main.elf elf32-littlearm)
LOAD linker stubs
LOAD /usr/lib/gcc/arm-none-eabi/13.2.1/../../../arm-none-eabi/lib/thumb/v7e-m/nofp/libc.a
LOAD /usr/lib/gcc/arm-none-eabi/13.2.1/../../../arm-none-eabi/lib/thumb/v7e-m/nofp/libm.a
LOAD /usr/lib/gcc/arm-none-eabi/13.2.1/thumb/v7e-m/nofp/libgcc.a

.comment        0x00000000       0x26
 .comment       0x00000000       0x26 main.o
                                 0x27 (size before relaxing)
